// <auto-generated />
using MDF.Models.ClassesDeDominio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MDF.Migrations
{
    [DbContext(typeof(MDFContext))]
    [Migration("20191130130134_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MDF.Associations.TipoMaquinaOperacao", b =>
                {
                    b.Property<long>("id_operacao");

                    b.Property<long>("id_tipoMaquina");

                    b.HasKey("id_operacao", "id_tipoMaquina");

                    b.HasIndex("id_tipoMaquina");

                    b.ToTable("TipoMaquinaOperacao");
                });

            modelBuilder.Entity("MDF.Models.LinhaProducao", b =>
                {
                    b.Property<long>("id");

                    b.HasKey("id");

                    b.ToTable("LinhasProducao");
                });

            modelBuilder.Entity("MDF.Models.Maquina", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("id_linhaProducao");

                    b.Property<long>("id_tipoMaquina");

                    b.HasKey("Id");

                    b.HasIndex("id_linhaProducao");

                    b.HasIndex("id_tipoMaquina");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("MDF.Models.Operacao", b =>
                {
                    b.Property<long>("id");

                    b.HasKey("id");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("MDF.Models.TipoMaquina", b =>
                {
                    b.Property<long>("id_tipoMaquina");

                    b.HasKey("id_tipoMaquina");

                    b.ToTable("TiposMaquina");
                });

            modelBuilder.Entity("MDF.Associations.TipoMaquinaOperacao", b =>
                {
                    b.HasOne("MDF.Models.Operacao", "operacao")
                        .WithMany("tiposMaquinas")
                        .HasForeignKey("id_operacao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MDF.Models.TipoMaquina", "tipoMaquina")
                        .WithMany("operacoesMaquina")
                        .HasForeignKey("id_tipoMaquina")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MDF.Models.LinhaProducao", b =>
                {
                    b.OwnsOne("MDF.Models.ValueObjects.Dimensao", "dimensaoLinhaProducao", b1 =>
                        {
                            b1.Property<long>("LinhaProducaoid");

                            b1.Property<int>("comprimento");

                            b1.Property<int>("largura");

                            b1.HasKey("LinhaProducaoid");

                            b1.ToTable("LinhasProducao");

                            b1.HasOne("MDF.Models.LinhaProducao")
                                .WithOne("dimensaoLinhaProducao")
                                .HasForeignKey("MDF.Models.ValueObjects.Dimensao", "LinhaProducaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.Orientacao", "orientacaoLinhaProducao", b1 =>
                        {
                            b1.Property<long>("LinhaProducaoid");

                            b1.Property<string>("orientacao");

                            b1.HasKey("LinhaProducaoid");

                            b1.ToTable("LinhasProducao");

                            b1.HasOne("MDF.Models.LinhaProducao")
                                .WithOne("orientacaoLinhaProducao")
                                .HasForeignKey("MDF.Models.ValueObjects.Orientacao", "LinhaProducaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.Descricao", "descricao", b1 =>
                        {
                            b1.Property<long>("LinhaProducaoid");

                            b1.Property<string>("Id");

                            b1.HasKey("LinhaProducaoid");

                            b1.ToTable("LinhasProducao");

                            b1.HasOne("MDF.Models.LinhaProducao")
                                .WithOne("descricao")
                                .HasForeignKey("MDF.Models.ValueObjects.Descricao", "LinhaProducaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.PosicaoAbsoluta", "posicaoAbsolutaLinhaProducao", b1 =>
                        {
                            b1.Property<long>("LinhaProducaoid");

                            b1.Property<int>("x");

                            b1.Property<int>("y");

                            b1.HasKey("LinhaProducaoid");

                            b1.ToTable("LinhasProducao");

                            b1.HasOne("MDF.Models.LinhaProducao")
                                .WithOne("posicaoAbsolutaLinhaProducao")
                                .HasForeignKey("MDF.Models.ValueObjects.PosicaoAbsoluta", "LinhaProducaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MDF.Models.Maquina", b =>
                {
                    b.HasOne("MDF.Models.LinhaProducao", "linhaProducao")
                        .WithMany("maquinas")
                        .HasForeignKey("id_linhaProducao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MDF.Models.TipoMaquina", "tipoMaquina")
                        .WithMany("maquinas")
                        .HasForeignKey("id_tipoMaquina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("MDF.Models.ValueObjects.MarcaMaquina", "marcaMaquina", b1 =>
                        {
                            b1.Property<long>("MaquinaId");

                            b1.Property<string>("marca");

                            b1.HasKey("MaquinaId");

                            b1.ToTable("Maquinas");

                            b1.HasOne("MDF.Models.Maquina")
                                .WithOne("marcaMaquina")
                                .HasForeignKey("MDF.Models.ValueObjects.MarcaMaquina", "MaquinaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.ModeloMaquina", "modeloMaquina", b1 =>
                        {
                            b1.Property<long>("MaquinaId");

                            b1.Property<string>("modelo");

                            b1.HasKey("MaquinaId");

                            b1.ToTable("Maquinas");

                            b1.HasOne("MDF.Models.Maquina")
                                .WithOne("modeloMaquina")
                                .HasForeignKey("MDF.Models.ValueObjects.ModeloMaquina", "MaquinaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.NomeMaquina", "nomeMaquina", b1 =>
                        {
                            b1.Property<long>("MaquinaId");

                            b1.Property<string>("nomeMaquina");

                            b1.HasKey("MaquinaId");

                            b1.ToTable("Maquinas");

                            b1.HasOne("MDF.Models.Maquina")
                                .WithOne("nomeMaquina")
                                .HasForeignKey("MDF.Models.ValueObjects.NomeMaquina", "MaquinaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.PosicaoRelativa", "posicaoRelativa", b1 =>
                        {
                            b1.Property<long>("MaquinaId");

                            b1.Property<int>("posicao");

                            b1.HasKey("MaquinaId");

                            b1.ToTable("Maquinas");

                            b1.HasOne("MDF.Models.Maquina")
                                .WithOne("posicaoRelativa")
                                .HasForeignKey("MDF.Models.ValueObjects.PosicaoRelativa", "MaquinaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.PosicaoAbsoluta", "posicaoLinhaProducao", b1 =>
                        {
                            b1.Property<long>("MaquinaId");

                            b1.Property<int>("x");

                            b1.Property<int>("y");

                            b1.HasKey("MaquinaId");

                            b1.ToTable("Maquinas");

                            b1.HasOne("MDF.Models.Maquina")
                                .WithOne("posicaoLinhaProducao")
                                .HasForeignKey("MDF.Models.ValueObjects.PosicaoAbsoluta", "MaquinaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MDF.Models.Operacao", b =>
                {
                    b.OwnsOne("MDF.Models.ValueObjects.DuracaoOperacao", "duracaoOperacao", b1 =>
                        {
                            b1.Property<long>("Operacaoid");

                            b1.Property<string>("hora");

                            b1.Property<string>("min");

                            b1.Property<string>("seg");

                            b1.HasKey("Operacaoid");

                            b1.ToTable("Operacoes");

                            b1.HasOne("MDF.Models.Operacao")
                                .WithOne("duracaoOperacao")
                                .HasForeignKey("MDF.Models.ValueObjects.DuracaoOperacao", "Operacaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("MDF.Models.ValueObjects.Descricao", "descricaoOperacao", b1 =>
                        {
                            b1.Property<long>("Operacaoid");

                            b1.Property<string>("Id");

                            b1.HasKey("Operacaoid");

                            b1.ToTable("Operacoes");

                            b1.HasOne("MDF.Models.Operacao")
                                .WithOne("descricaoOperacao")
                                .HasForeignKey("MDF.Models.ValueObjects.Descricao", "Operacaoid")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MDF.Models.TipoMaquina", b =>
                {
                    b.OwnsOne("MDF.Models.ValueObjects.Descricao", "descricaoTipoMaquina", b1 =>
                        {
                            b1.Property<long>("TipoMaquinaid_tipoMaquina");

                            b1.Property<string>("Id");

                            b1.HasKey("TipoMaquinaid_tipoMaquina");

                            b1.ToTable("TiposMaquina");

                            b1.HasOne("MDF.Models.TipoMaquina")
                                .WithOne("descricaoTipoMaquina")
                                .HasForeignKey("MDF.Models.ValueObjects.Descricao", "TipoMaquinaid_tipoMaquina")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
